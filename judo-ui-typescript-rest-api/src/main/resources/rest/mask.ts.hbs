{{> fragment.header.hbs }}

import { MaskBuilder{{# if (isGreaterThan (getAggregatedRelationsSize classType) 0) }}, RelationMaskBuilder{{/ if }} } from './MaskBuilder';
{{# each (modelImportTokens classType) as |imp| }}
import type { {{ imp }}Attributes } from '../model/{{ imp }}';
{{/ each }}
{{# if (hasClassAttributes classType) }}
import type { {{ classDataName classType 'Attributes' }} } from '../model/{{ classDataName classType '' }}';
{{/ if }}
{{# each (getNotClassTypeRelations (getUniqueRelations classType) classType) as | relation | }}
import { {{ getRelationBuilderNames relation }} } from './{{ classDataName relation.target "MaskBuilder" }}';
{{/ each}}

{{# each (getAggregatedRelations classType) as | relation | }}
export class {{ relationBuilderName relation classType "MaskBuilder" }} extends RelationMaskBuilder {
  constructor(protected props: Array<{{ getRelationBuilderNamesWithPipe relation }}>) {
    super('{{ relation.name }}', props);
  }
}
{{/ each }}

export class {{ classDataName classType "MaskBuilder" }} extends MaskBuilder {
  constructor(protected props: Array<{{ generateBuilderProps classType }}>) {
    super(props);
  }
}
