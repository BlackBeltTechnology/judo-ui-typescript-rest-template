templates:
  - name: enum.ts.hbs
    factoryExpression: "#getEnumerationTypes(#application)"
    pathExpression: >
      'data-api/model/' +
      #restParamName(#self) + '.ts'
    templateName: model/enum.ts.hbs
    templateContext:
      - name: enumerationType
        expression: "#self"

  - name: class.ts.hbs
    factoryExpression: "#getClassTypes(#application)"
    pathExpression: >
      'data-api/model/' +
      #classDataName(#self, null) + '.ts'
    templateName: model/class.ts.hbs
    templateContext:
      - name: classType
        expression: "#self"
      - name: application
        expression: "#application"
      - name: actor
        expression: "#actor"
#TODO: Generate Faults
  - name: queryCustomizer.ts.hbs
    factoryExpression: "#getQueryCustomizers(#application)"
    pathExpression: >
      'data-api/rest/' +
      #classDataName(#self, "QueryCustomizer") + '.ts'
    templateName: rest/queryCustomizer.ts.hbs
    templateContext:
      - name: classType
        expression: "#self"
      - name: application
        expression: "#application"
      - name: actor
        expression: "#actor"

  - name: mask.ts.hbs
    factoryExpression: "#getQueryCustomizers(#application)"
    pathExpression: >
      'data-api/rest/' +
      #classDataName(#self, "MaskBuilder") + '.ts'
    templateName: rest/mask.ts.hbs
    templateContext:
      - name: classType
        expression: "#self"

  - name: filterable.ts.hbs
    factoryExpression: "#getFilterableDataTypes(#application)"
    pathExpression: >
      'data-api/rest/' +
      #restFilterName(#actor, #self) + '.ts'
    templateName: rest/filterable.ts.hbs
    templateContext:
      - name: dataType
        expression: "#self"
      - name: application
        expression: "#application"
      - name: actor
        expression: "#actor"